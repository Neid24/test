
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="apple-touch-icon" sizes="76x76" href="https://tb.ngmk.uz/assets/assessment/template/img/apple-icon.png">
  <link rel="icon" type="image/png" href="https://tb.ngmk.uz/assets/assessment/template/img/favicon.png">
  <title>
    Xodimlarning Texnika Xavfsizligi bilimini tekshirish 
    
  </title>
  <!--     Fonts and icons     -->
  <style>
    /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 300;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 300;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 300;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 300;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmSU5fBBc4.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
      /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOmCnqEu92Fr1Mu72xKOzY.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOmCnqEu92Fr1Mu5mxKOzY.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOmCnqEu92Fr1Mu7GxKOzY.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOmCnqEu92Fr1Mu4mxK.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
      /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 500;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmEU9fCRc4EsA.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 500;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmEU9fABc4EsA.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 500;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmEU9fChc4EsA.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 500;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmEU9fBBc4.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
      /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmWUlfCRc4EsA.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmWUlfABc4EsA.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmWUlfChc4EsA.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmWUlfBBc4.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
      /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 900;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmYUtfCRc4EsA.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 900;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmYUtfABc4EsA.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 900;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmYUtfChc4EsA.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto';
        font-style: normal;
        font-weight: 900;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/KFOlCnqEu92Fr1MmYUtfBBc4.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
      /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufA5qW54A.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufJ5qW54A.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufD5qW54A.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufN5qU.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
      /* cyrillic-ext */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufA5qW54A.woff2') format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }
      /* cyrillic */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufJ5qW54A.woff2') format('woff2');
        unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufD5qW54A.woff2') format('woff2');
        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }
      /* latin */
      @font-face {
        font-family: 'Roboto Slab';
        font-style: normal;
        font-weight: 700;
        src: url('https://tb.ngmk.uz/assets/assessment/roboto2/BngMUXZYTXPIvIBgJJSb6ufN5qU.woff2') format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
  </style>
  <style>
    /* fallback */
      @font-face {
        font-family: 'Material Icons Round';
        font-style: normal;
        font-weight: 400;
        src: url('https://tb.ngmk.uz/assets/assessment/material/LDItaoyNOAY6Uewc665JcIzCKsKc_M9flwmP.woff2') format('woff2');
      }

      .material-icons-round {
        font-family: 'Material Icons Round';
        font-weight: normal;
        font-style: normal;
        font-size: 24px;
        line-height: 1;
        letter-spacing: normal;
        text-transform: none;
        display: inline-block;
        white-space: nowrap;
        word-wrap: normal;
        direction: ltr;
        -webkit-font-feature-settings: 'liga';
        -webkit-font-smoothing: antialiased;
      }
  </style>
  <!-- Nucleo Icons -->
  <link href="https://tb.ngmk.uz/assets/assessment/template/css/nucleo-icons.css" rel="stylesheet" />
  <link href="https://tb.ngmk.uz/assets/assessment/template/css/nucleo-svg.css" rel="stylesheet" />
  <!-- Font Awesome Icons -->
  <script src="https://tb.ngmk.uz/assets/assessment/js/kitfontawsome.js" crossorigin="anonymous"></script>
  <!-- Material Icons -->
  <!-- CSS Files -->
  
 <!-- SCRIPT JS  -->
 <script src="https://tb.ngmk.uz/assets/xlsx.full.min.js"></script>   
                         <link rel="stylesheet" href="https://tb.ngmk.uz/assets/assessment/js/dtnew/jquery.dataTables.min.css">
                   <link rel="stylesheet" href="https://tb.ngmk.uz/assets/assessment/js/dtnew/buttons.dataTables.min.css">
                     
      <link id="pagestyle" href="https://tb.ngmk.uz/assets/assessment/template/css/material-dashboard.css?v=3.0.0" rel="stylesheet" />

  <script src="https://tb.ngmk.uz/assets/assessment/js/jquery.js"></script>
  <link rel='stylesheet' href="https://tb.ngmk.uz/assets/assessment/css/style.css">

</head>

<body class="g-sidenav-show  bg-gray-200">
<aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3   bg-gradient-dark" id="sidenav-main">
    <div class="sidenav-header" style="word-wrap: break-word; padding: 10px; text-align:center; color: white; margin: 10px;">
      <a class="" href="#"  style="word-wrap: break-word; color: white; ">Xavfsizlik Texnikasi  Testlari</a>
    </div>
    <hr class="horizontal light mt-0 mb-2">
    <div class="collapse navbar-collapse  w-auto  max-height-vh-100" id="sidenav-collapse-main">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link text-white" href="https://tb.ngmk.uz/portal">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">dashboard</i>
            </div>
            <span class="nav-link-text ms-1">Bosh sahifa</span>
          </a>
        </li>
                      <li class="nav-item ">
                <a class="nav-link text-white " href="https://tb.ngmk.uz/assessment/test/testList">
                  <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                    <i class="material-icons opacity-10">table_view</i>
                  </div>
                  <span class="nav-link-text ms-1 ">Testlar</span>
                </a>
              </li>
            
                </ul>
    </div>
</aside>
<main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" navbar-scroll="true">
      <div class="container-fluid py-1 px-3">
        <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
          <div class="ms-md-auto pe-md-3 d-flex align-items-center">
          </div>
          <ul class="navbar-nav  justify-content-end">
            <li class="nav-item d-flex align-items-center">
                                        <a href="https://tb.ngmk.uz/assessment/auth/login" class="nav-link text-body font-weight-bold px-0">
                            <i class="fa fa-user me-sm-1"></i>
                            <span class="d-sm-inline d-none">Kirish</span>
                        </a>
                                    </li>
          </ul>
        </div>
      </div>
    </nav>
    <!-- End Navbar -->
    <div class="container-fluid py-4">
  <script>
    function logout()
    {

      localStorage.clear();
      location.replace('https://tb.ngmk.uz/assessment/auth/logout');
    }
    function decodeHTML (html) {
      let txt = document.createElement('textarea');
      txt.innerHTML = html;
      return txt.value;
    };
  </script>
 
<style>
    /* запрет на выделение текста */
    .text-select-off
    {
        -ms-user-select: none; 
		-moz-user-select: none; 
		-webkit-user-select: none; 
		user-select: none; 
    }
</style>
<div class="row">
    <div class="col-xl-10 col-10 col-sm-9 ">
        <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                <div style="background-color: #ffc107;" class="shadow-info border-radius-lg pt-4 pb-3">
                    <h6 class="text-white text-capitalize ps-3">Test</h6>
                </div>
                <div class='row m-4 '>
                    <div class='col-6 text-center'>
                        <h4>
                            Test boshlangan vaqt:                        </h4>
                        2023-03-28 11:33:46                    </div>
                    <div class='col-6 text-center'>
                        <h4>Test tugashi vaqti:</h4>
                        2023-03-28 12:03:46                    </div>
                </div>
                <div class='row'>
                    <div class="col-1"></div>
                    <div class='col-2'>
                        <button id="previous" style="background-color: #ffc107;" class='btn btn-info'><< Oldingi savol</button>
                    </div>
                    <div class='col-6'></div>
                    <div class='col-2'>
                        <button id="next" style="background: #ffc107;" class='btn btn-info'>Keyngi savol >></button>
                    </div>
                    <div class="col-1"></div>
                </div>
            </div>
            <div class="card-body px-0 pb-2 text-select-off" >
                <div class='row'>
                    <h3 class='myml-15 mymb-15'>Savol:</h3>
                    <div id="question" class='col-12 questionDiv' style='font-size: 20px !important;'></div>
                </div>
                <hr>
                <div class='row' style="padding: 0 0.75rem;">
                    <div class='col-12 answersPosition form-check' style="display: flex; border-bottom: 1px solid silver; width: 100%;">
                        <div><input type='radio' class='onChecked form-check-input' id="answerRadio1" name='answer'/></div><div><label class='answersList form-check-label myml-15' for="answerRadio1" id="answer1"></label></div>
                    </div>
                    <div class='col-12 answersPosition form-check' style="display: flex; border-bottom: 1px solid silver; width: 100%;">
                        <div><input type='radio' class='onChecked form-check-input' id="answerRadio2" name='answer'/></div><div><label class='answersList form-check-label myml-15' for="answerRadio2" id="answer2"></label></div>
                    </div>
                    <div class='col-12 answersPosition form-check' style="display: flex; border-bottom: 1px solid silver; width: 100%;">
                        <div><input type='radio' class='onChecked form-check-input' id="answerRadio3" name='answer'/></div><div><label class='answersList form-check-label myml-15' for="answerRadio3" id="answer3"></label></div>
                    </div>
                    <div class='col-12 answersPosition form-check' style="display: flex;">
                        <div><input type='radio' class='onChecked form-check-input' id="answerRadio4" name='answer'/></div><div><label class='answersList form-check-label myml-15' for="answerRadio4" id="answer4"></label></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class='col-xl-2 col-2 col-sm-3'>
        <div class="card my-4">
            <div class="card-header p-3 pt-2">
                <div class="icon icon-lg icon-shape shadow-info text-center border-radius-xl mt-n4 position-absolute" style="background-color: #ffc107;">
                    <i class="material-icons opacity-10">weekend</i>
                </div>
                <div class="text-end pt-1">
                    <p class="text-sm mb-0 text-capitalize"></p>
                    <h4 class="mb-0">Ma'lumot</h4>
                </div>
            </div>
            <div class='card-body'>
                <div id="#mytimerUp"><div id='mytimer'></div></div>
                <hr>
                Savollar: <br/>
                <div id='questionPaginate' class='row'></div>
                <button class='btn btn-success' data-bs-toggle="modal" data-bs-target="#endTestModal" >Testni yakunlash</button>
            </div>
            <hr class="dark horizontal my-0">
            <!-- <div class="card-footer p-3">
                <p class="mb-0"><span class="text-success text-sm font-weight-bolder" id="persentAnsweredQuestions">0%</span> </p>
            </div> -->
        </div>
    </div>
</div>

<div id='endTestModal' class="modal" tabindex="-1" aria-labelledby="..." aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <h4>Testni yakunlashni xohlaysizmi ?</h4>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success endTest">Ha</button>
                <button class="btn btn-primary" data-bs-dismiss="modal">Yo'q</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function(e)
    {

        // проверяет скачаны ли список Вопросов, если же не скачано
        // скачает с помощью ajax.
        if(sessionStorage.getItem('questionsList') == null) 
        {
            $.ajax({
                url: 'https://tb.ngmk.uz/assessment/test/getQuestionListProba',
                type: 'post',
                data : {
                    'sessionId': 142839,
                },
                success:function(data)
                {
                    let questions = JSON.parse(data);

                    // сохраняем всё в sessionStorage чтобы не скачивать всё заного
                    sessionStorage.setItem('questionsList', JSON.stringify(questions));
                    sessionStorage.setItem('mySessId', 142839);
                    sessionStorage.setItem('myTestId', 213);

                    $.ajax({
                        url: 'https://tb.ngmk.uz/assessment/test/getAutoSaveAnswersProba',
                        type: 'GET',
                        data: {
                            'sessionId': 142839                        }, 
                        success:function(data) 
                        {
                            
                            let answers = JSON.parse(data);
                            if(answers.length != 0)
                            {
                                let newAns = answers.map(answer => {
                                  let findedQuestion = questions.find(question => question.questionId == answer.questionId);
                                  let findedAnswers = Object.keys(findedQuestion.answers).map(key => findedQuestion.answers[key]);
    
                                  let answerIndex = findedAnswers.indexOf(answer.answer, 0);
                                
                                  let ansOrd = 0;
                                  if(answerIndex == 0)
                                  {
                                      ansOrd = 1;
                                  }
                                  else if(answerIndex == 1)
                                  {
                                      ansOrd = 4;
                                  }
                                  
                                  else 
                                    {
                                        ansOrd = answerIndex;    
                                    }
                                
                                    return {
                                        ...answer, 
                                        checkedRadio: ansOrd
                                    };
                                });
                                sessionStorage.setItem('answersList', JSON.stringify(newAns));
                                prepareTest(1);
                            }
                            else 
                            {
                                prepareTest(0);
                            }
                       
                        }, 
                        error:function(err) 
                        {
                            console.log(err);
                        }
                    });

                  
                },
                error:function(err)
                {
                    console.log(err);
                }
            })
        }
        // иначе если у нас есть список вопросов, заного качать не будет
        else
        {
            prepareTest(1);
        }


        // событие выбора ответа
        $("body").on('change', '.onChecked', function(e)
        {
            let checkedRadio = $(this).attr('id').replace('answerRadio', '');
            // получаем id-ответа который выбрал пользователь
            // имеется в виду от 1 до 4

            let selectedAnswer = document.getElementById('answer'+checkedRadio).dataset.order_answer;
            // orderAnswer index - ответа в sessionStorage в questionList

            let questionOrdInLS = document.getElementById('question').dataset.question_ord;
            // questionOrdInLS  index - вопроса в sessionStorage в questionList

            let questions = JSON.parse(sessionStorage.getItem('questionsList'));
            // вопросы

            let answerText = questions[questionOrdInLS].answers[selectedAnswer];
            // текст ответа из sessionStorage

            let questionId = questions[questionOrdInLS].questionId;
            // id вопроса на базе данных

            // провекра если же answersList в sessionStorage пустой он создаёт новый
            if(sessionStorage.getItem('answersList') == null)
            {
                let answerArr = [{
                    questionId: questionId,
                    answer: answerText,
                    checkedRadio: checkedRadio
                }];
                sessionStorage.setItem('answersList', JSON.stringify(answerArr));
            }

            // если же не пустой то получает массив asnwersList и добавляет в конец массива ответ
            else
            {
                let answersList = JSON.parse(sessionStorage.getItem('answersList'));
                
                // index -> ищет index уже выбранного ответа на данный вопрос
                // то есть если тестируемый уже отвечал на данный вопрос он получит индекс ответа в массиве answersList
                // если же тестируемый ещё не отвечал на данный вопрос он просто добавит новый элемент в массив answersList
                let index = answersList.findIndex((val) =>
                {
                    if(val.questionId == questionId)
                    {
                        return true;
                    }
                });

                // тестируемый ещё не отвечал на данный вопрос
                if(index === -1)
                {
                    answersList.push({
                        questionId: questionId,
                        answer: answerText,
                        checkedRadio: checkedRadio
                    });
                }
                // тестируемый уже отвечал на данный вопрос 
                // обновляем старый ответ
                else
                {
                    answersList[index] = {
                        questionId: questionId,
                        answer: answerText,
                        checkedRadio: checkedRadio
                    };
                }
                sessionStorage.setItem('answersList', JSON.stringify(answersList));
            }



            // LAST CHANSE
            // контрольно сохраняем ответ чтобы на всякий случай вытащить его в случаи ФорсМажора
            // если всё пройдёт благополучно эта таблица нам не понадобится
            $.ajax({
                url:"https://tb.ngmk.uz/assessment/test/saveAnswerProba",
                type: "POST",
                data: {
                    questionId: questionId,
                    answer:answerText,
                    sessId: 142839                },
                success:function(data)
                {
                    console.log(data);
                },
                error:function(err)
                {
                    console.log(err);
                }
            });
            

            // настраиваем стили сбоку список вопросов (меняем цвет на зеленный который уже тестируемый ответил)
            document.getElementById("questionBTN"+questionOrdInLS).setAttribute('class', 'btn selectQuestion btn-success');
            document.getElementById("questionBTN"+questionOrdInLS).setAttribute('title', 'Javob berdingiz');


            let selectedQuestionBtn = document.getElementById('questionBTN'+questionOrdInLS);
            sessionStorage.setItem('currentQuestionClass', selectedQuestionBtn.className.split(' ')[2]);
            selectedQuestionBtn.setAttribute('class', 'btn selectQuestion btn-primary ');
            selectedQuestionBtn.setAttribute('title', 'Hozirgi savol');
            sessionStorage.setItem('currentQuestion', questionOrdInLS);
            checkAllAnswer();
        });

        $("body").on('click', '.selectQuestion', function(e)
        {
            let selectedQuestion = $(this).attr('id').replace("questionBTN", '');
            changeQuestion(selectedQuestion);
        });

        $("body").on('click', '#next', function(e)
        {
            let currentQuestionOrd = sessionStorage.getItem('currentQuestion');

            let questionListCount = JSON.parse(sessionStorage.getItem('questionsList')).length;

            if(+currentQuestionOrd + 1 == questionListCount)
            {
                changeQuestion(0);
            }
            else
            {
                changeQuestion(+currentQuestionOrd+1);
            }

        });
        $("body").on('click', '#previous', function(e)
        {
            let currentQuestionOrd = sessionStorage.getItem('currentQuestion');

            let questionListCount = JSON.parse(sessionStorage.getItem('questionsList')).length;

            if(currentQuestionOrd == 0)
            {
                changeQuestion(questionListCount-1);
            }
            else
            {
                changeQuestion(currentQuestionOrd-1);
            }

        });
        $("body").on('click', '.endTest', function(e)
        {

            let answersList = JSON.parse(sessionStorage.getItem('answersList'));
            $(this).attr('disabled', true);
            $.ajax({
                type:'post',
                url:'https://tb.ngmk.uz/assessment/test/endTestProba',
                data:{
                    sessionId:142839,
                    answersList:answersList
                },
                success:function(resId)
                {
                    console.log(resId);
                    sessionStorage.clear();
                    window.location.replace("https://tb.ngmk.uz/assessment/test/myResultProba?resId="+resId);
                },
                error:function(err)
                {
                    console.log(err);
                }
            });


        });

    });


    function changeQuestion(ordQuestion)
    {
        checkAllAnswer();
        let questionsList = JSON.parse(sessionStorage.getItem('questionsList'));
        let question = questionsList[ordQuestion];
        let oldQuestionId = sessionStorage.getItem('currentQuestion');
        let oldQuestionBtn = document.getElementById("questionBTN"+oldQuestionId);
        let classOldQuestionBTN = sessionStorage.getItem('currentQuestionClass');
        oldQuestionBtn.className = 'btn selectQuestion '+classOldQuestionBTN;

        let answersList = JSON.parse(sessionStorage.getItem('answersList'));
        if(answersList == null)
        {
            setQuestion(question, ordQuestion);
        }

        else
        {
            let answer = answersList.find(val=>{
                return val.questionId == question.questionId
            });
            if(answer == undefined)
            {
                setQuestion(question, ordQuestion);
            }
            else
            {
                setQuestion(question, ordQuestion, answer.checkedRadio);
            }
        }
    }
    function prepareTest(type) 
    {
        let questions = JSON.parse(sessionStorage.getItem('questionsList'));
        let questionsCount = questions.length;
  
        // type == 0 говорит о том что ещё Тестируемый не отметил ни одного ответа
        // то есть автовыбор отмеченных не будет!
        // + по умолчанию будет выбрана 1ый вопрос
        if(type==0)
        {
            questionPaginate(questionsCount);
            setQuestion(questions[0], 0);
        }
        // если же type == 1 
        // то программа из sessionStorage возьмёт все выбранные уже ответы и отметит все
        // + будет по умолчанию выбран вопрос который был открыт до обновления
        else
        {
            let currentSelectedQuestion = sessionStorage.getItem('currentQuestion') == null ? 0:sessionStorage.getItem('currentQuestion');
            questionPaginate(questionsCount, currentSelectedQuestion);
            paginationChanges();
            setQuestion(questions[currentSelectedQuestion], currentSelectedQuestion);
        }

    }

    function paginationChanges()
    {
        let answersList = sessionStorage.getItem('answersList');
        let questionsList = JSON.parse(sessionStorage.getItem('questionsList'));
        if(answersList != null)
        {
            answersList = JSON.parse(answersList);
            let answeredList = answersList.map(val =>
            {
                let index = questionsList.findIndex(question =>
                {
                    return val.questionId == question.questionId;
                });
                return index;
            });
            answeredList.filter((val) => val != -1);


            answeredList.forEach(val => {
                document.getElementById("questionBTN"+val).setAttribute('class', 'btn selectQuestion btn-success');
            });
        }
    }
    function questionPaginate(questionCount, selectedQuestion = 0)
    {
        let div = document.getElementById('questionPaginate');


        for(let i = 0; i<questionCount; i++)
        {
            let divCol4=document.createElement('div');
            divCol4.setAttribute('class', 'col-4');
            divCol4.setAttribute('style', 'text-align: center;');
            let questionButton = document.createElement('button');
            questionButton.setAttribute('id', 'questionBTN'+i);
            questionButton.setAttribute('data-questionOrd', i);

            if(i == selectedQuestion)
            {
                sessionStorage.setItem('currentQuestion', selectedQuestion);
                sessionStorage.setItem('currentQuestionClass', 'btn-primary');
            }

            questionButton.setAttribute('class', 'btn selectQuestion btn-secondary');


            questionButton.setAttribute('style', 'padding: 0.625rem 1rem !important;');
            questionButton.innerHTML = i+1;
            divCol4.appendChild(questionButton)
            div.appendChild(divCol4);
        }
    }
    function setQuestion(question, questionOrd = 0, checkedRadio = null)
    {
        $("#question").html(decodeHTML(question['question']));
        $("#question").attr('data-id_question', question['questionId']);
        $("#question").attr('data-question_ord', questionOrd);

        $("#answer1").html(decodeHTML(question.answers[0]));
        $("#answer1").attr('data-order_answer', 0);

        $("#answer2").html(decodeHTML(question.answers[2]));
        $("#answer2").attr('data-order_answer', 2);

        $("#answer3").html(decodeHTML(question.answers[3]));
        $("#answer3").attr('data-order_answer', 3);

        $("#answer4").html(decodeHTML(question.answers[1]));
        $("#answer4").attr('data-order_answer', 1);

        for(let i = 0; i<4; i++)
        {
            if(checkedRadio != null && checkedRadio == (i+1))
            {
                $("#answerRadio"+(i+1)).prop('checked', true);
            }
            else
            {
                $("#answerRadio"+(i+1)).prop('checked', false);
            }
        }

        let selectedQuestionBtn = document.getElementById('questionBTN'+questionOrd);

        sessionStorage.setItem('currentQuestionClass', selectedQuestionBtn.className.split(' ')[2]);
        selectedQuestionBtn.setAttribute('class', 'btn selectQuestion btn-primary ');
        selectedQuestionBtn.setAttribute('title', 'Hozirgi savol');
        sessionStorage.setItem('currentQuestion', questionOrd);
    }

    // проверяем все ли ответы были отмечены
    // если все ответы уже были отмечены, keyngi savol меняется на testni yakunlash
    function checkAllAnswer()
    {
        let questions= sessionStorage.getItem('questionsList');
        let answers = sessionStorage.getItem('answersList');
        if(questions != null && answers != null)
        {
            let questionsCount = JSON.parse(questions).length;
            let answersCount = JSON.parse(answers).length;
            if(questionsCount == answersCount)
            {
                let a = document.getElementById("next");

                a.innerHTML = `Testni yakunlash`;
                a.setAttribute('class', 'btn btn-success');
                a.setAttribute('data-bs-toggle', "modal");
                a.setAttribute('data-bs-target', '#endTestModal');
            }
        }
    }

</script>

<script>


    // Credit: Mateusz Rybczonec

    const FULL_DASH_ARRAY = 283;
    const WARNING_THRESHOLD = 10;
    const ALERT_THRESHOLD = 5;

    const COLOR_CODES = {
    info: {
        color: "green"
    },
    warning: {
        color: "orange",
        threshold: WARNING_THRESHOLD
    },
    alert: {
        color: "red",
        threshold: ALERT_THRESHOLD
    }
    };
    let currentTimeLeft = Math.floor(new Date("2023-03-28 12:03:46").getTime()/1000) - Math.floor(new Date("2023-03-28 11:43:14").getTime()/1000)
    let maxLim  = Math.floor(new Date("2023-03-28 12:03:46").getTime()/1000) - Math.floor(new Date("2023-03-28 11:33:46").getTime()/1000)
    let currentTimePassed =  Math.floor(new Date("2023-03-28 11:43:14").getTime()/1000) - Math.floor(new Date("2023-03-28 11:33:46").getTime()/1000)

    const TIME_LIMIT = maxLim;
    let timePassed = currentTimePassed;
    let timeLeft = currentTimeLeft;
    let timerInterval = null;
    let remainingPathColor = COLOR_CODES.info.color;

    document.getElementById("mytimer").innerHTML = `
    <div class="base-timer">
    <svg class="base-timer__svg" viewBox="0 0 100 100">
        <g class="base-timer__circle">
        <circle class="base-timer__path-elapsed" cx="50" cy="50" r="45"></circle>
        <path
            id="base-timer-path-remaining"
            stroke-dasharray="283"
            class="base-timer__path-remaining ${remainingPathColor}"
            d="
            M 50, 50
            m -45, 0
            a 45,45 0 1,0 90,0
            a 45,45 0 1,0 -90,0
            "
        ></path>
        </g>
    </svg>
    <span id="base-timer-label" class="base-timer__label">${formatTime(
        timeLeft
    )}</span>
    </div>
    `;

    startTimer();

    function onTimesUp() {
    clearInterval(timerInterval);
    }

    function startTimer() {
    timerInterval = setInterval(() => {
        timePassed = timePassed += 1;
        timeLeft = TIME_LIMIT - timePassed;
        document.getElementById("base-timer-label").innerHTML = formatTime(
        timeLeft
        );
        setCircleDasharray();
        setRemainingPathColor(timeLeft);

        if (timeLeft === 0) {
        onTimesUp();
        }
    }, 1000);
    }

    function formatTime(time) {
    const minutes = Math.floor(time / 60);
    let seconds = time % 60;

    if (seconds < 10) {
        seconds = `0${seconds}`;
    }

    return `${minutes}:${seconds}`;
    }

    function setRemainingPathColor(timeLeft) {
    const { alert, warning, info } = COLOR_CODES;
    if (timeLeft <= alert.threshold) {
        document
        .getElementById("base-timer-path-remaining")
        .classList.remove(warning.color);
        document
        .getElementById("base-timer-path-remaining")
        .classList.add(alert.color);
    } else if (timeLeft <= warning.threshold) {
        document
        .getElementById("base-timer-path-remaining")
        .classList.remove(info.color);
        document
        .getElementById("base-timer-path-remaining")
        .classList.add(warning.color);
    }
    }

    function calculateTimeFraction() {
    const rawTimeFraction = timeLeft / TIME_LIMIT;
    return rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);
    }

    function setCircleDasharray() {
    const circleDasharray = `${(
        calculateTimeFraction() * FULL_DASH_ARRAY
    ).toFixed(0)} 283`;
    document
        .getElementById("base-timer-path-remaining")
        .setAttribute("stroke-dasharray", circleDasharray);
    }

</script>
                <footer class="footer py-4">
                    <div class="container-fluid">
                    <div class="row align-items-center justify-content-lg-between">

                    </div>
                    </div>
                </footer>
            </div>
        </main>
        <script>
            console.image = function(url, size = 100) {
                let image = new Image();
                image.onload = function() {
                    let style = [
                    'font-size: 1px;',
                    'padding: ' + this.height/100*size + 'px ' + this.width/100*size + 'px;',
                    'background: url('+ url +') no-repeat;',
                    'background-size: contain;'
                    ].join(' ');
                    console.log('%c ', style);
                };
                image.src = url;
            };
            console.image('https://tb.ngmk.uz/assets/assessment/css/444.png', 65)
        </script>
        <!--   Core JS Files   -->
        <script src="https://tb.ngmk.uz/assets/assessment/template/js/core/popper.min.js"></script>
        <script src="https://tb.ngmk.uz/assets/assessment/template/js/core/bootstrap.min.js"></script>
        <script src="https://tb.ngmk.uz/assets/assessment/template/js/plugins/perfect-scrollbar.min.js"></script>
        <script src="https://tb.ngmk.uz/assets/assessment/template/js/plugins/smooth-scrollbar.min.js"></script>
        <script src="https://tb.ngmk.uz/assets/assessment/template/js/plugins/chartjs.min.js"></script>
          <!-- Github buttons -->
        <script async defer src="https://tb.ngmk.uz/assets/assessment/js/buttons.js"></script>
        <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
        <script src="https://tb.ngmk.uz/assets/assessment/template/js/material-dashboard.min.js?v=3.0.0"></script>


        <!--  -->
        
                            <script src="https://tb.ngmk.uz/assets/assessment/js/dtnew/jquery.dataTables.min.js"></script>
                    <script src="https://tb.ngmk.uz/assets/assessment/js/dtnew/dataTables.buttons.min.js"></script>
                    <script src="https://tb.ngmk.uz/assets/assessment/js/dtnew/jszip.min.js"></script>
                    <script src="https://tb.ngmk.uz/assets/assessment/js/dtnew/buttons.html5.min.js"></script>
                        
      

        <!-- JQUERY 3.6.0 -->

        <div style='display:none;' id='myhiddenttestid'>{"REDIRECT_UNIQUE_ID":"ZCKMgRsxB1A4xQMnYrg66wAAAAQ","REDIRECT_HTTPS":"on","REDIRECT_SSL_TLS_SNI":"tb.ngmk.uz","REDIRECT_STATUS":"200","UNIQUE_ID":"ZCKMgRsxB1A4xQMnYrg66wAAAAQ","HTTPS":"on","SSL_TLS_SNI":"tb.ngmk.uz","HTTP_HOST":"tb.ngmk.uz","HTTP_CONNECTION":"keep-alive","HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"111\", \"Not(A:Brand\";v=\"8\", \"Chromium\";v=\"111\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_CH_UA_PLATFORM":"\"Windows\"","HTTP_UPGRADE_INSECURE_REQUESTS":"1","HTTP_USER_AGENT":"Mozilla\/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/111.0.0.0 Safari\/537.36","HTTP_ACCEPT":"text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/avif,image\/webp,image\/apng,*\/*;q=0.8,application\/signed-exchange;v=b3;q=0.7","HTTP_SEC_FETCH_SITE":"none","HTTP_SEC_FETCH_MODE":"navigate","HTTP_SEC_FETCH_USER":"?1","HTTP_SEC_FETCH_DEST":"document","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7","HTTP_COOKIE":"supportOnlineTalkID=cwUTgBVB8Zx3srG3LvTPR5X0M8JtKs8W; ci_session=nmbns4omct5u8tbgthf74slvos4v0lrp","PATH":"\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin","SERVER_SIGNATURE":"","SERVER_SOFTWARE":"Apache\/2.4.6 (CentOS) OpenSSL\/1.0.2k-fips PHP\/7.4.33","SERVER_NAME":"tb.ngmk.uz","SERVER_ADDR":"172.16.0.26","SERVER_PORT":"443","REMOTE_ADDR":"192.168.48.88","DOCUMENT_ROOT":"\/var\/www\/tb.ngmk.uz","REQUEST_SCHEME":"https","CONTEXT_PREFIX":"","CONTEXT_DOCUMENT_ROOT":"\/var\/www\/tb.ngmk.uz","SERVER_ADMIN":"root@localhost","SCRIPT_FILENAME":"\/var\/www\/tb.ngmk.uz\/index.php","REMOTE_PORT":"54611","REDIRECT_QUERY_STRING":"\/assessment\/test\/testStartProba","REDIRECT_URL":"\/assessment\/test\/testStartProba","GATEWAY_INTERFACE":"CGI\/1.1","SERVER_PROTOCOL":"HTTP\/1.1","REQUEST_METHOD":"GET","QUERY_STRING":"testId=213&sessionId=142839&isTest=test","REQUEST_URI":"\/assessment\/test\/testStartProba?testId=213&sessionId=142839&isTest=test","SCRIPT_NAME":"\/index.php","PHP_SELF":"\/index.php","REQUEST_TIME_FLOAT":1679985793.874986,"REQUEST_TIME":1679985793}</div>
       <script>console.log(JSON.parse(document.getElementById('myhiddenttestid').innerHTML))</script>
      

    </body>
</html>
